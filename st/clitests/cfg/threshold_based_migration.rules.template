/*
 * Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions about this software or licensing,
 * please email opensource@seagate.com or cortx-questions@seagate.com.
 *
 */

/* Sample policy.rules file for using Gateway functionality */

define(HIGH_PERCENTAGE, HIGH_PH)
define(LOW_PERCENTAGE, LOW_PH)
define(PATH_NAME_LIKE, PATH_PH)

define(
  exclude_list,
  (
    FALSE
    OR PATH_NAME LIKE '%/.mcstore/%'
    OR PATH_NAME LIKE '%/.mcstore.bak/%'
   )
)

define(
  access_age,
  (DAYS(CURRENT_TIMESTAMP) - DAYS(ACCESS_TIME))
)

define(
  mb_allocated,
  (INTEGER(KB_ALLOCATED / 1024))
)

/* Define an external pool for the off-line storage */
RULE EXTERNAL POOL 'mcstore' EXEC '/opt/ibm/MCStore/bin/mcstore' OPTS '-F'

/*  Define migration rule with a threshold to trigger low space events
    and move data to the external off-line pool. When on-line usage
    exceeds 15% utilization, it will move the coldest files to off-line storage
    until the on-line usage is reduced to 11% utilization level. Only files that have
    data on-line are eligible for migration.
*/
RULE 'MoveOffline' MIGRATE FROM POOL 'system'
    THRESHOLD(HIGH_PERCENTAGE, LOW_PERCENTAGE)
    WEIGHT(mb_allocated)
    TO POOL 'mcstore'
    WHERE
    (
        PATH_NAME LIKE 'PATH_NAME_LIKE/%'
        AND (KB_ALLOCATED > 0)
        AND NOT(exclude_list)
    )

/* Define default placement rule */
RULE 'Placement' SET POOL 'system'

/* This policy allows recalling the migrated data transparently, whenever any application tries to read/write the file.
   After defining the cloud storage tier, this policy should always be kept applied on the file system.
   Failure to do so results in no data being returned, causing applications to fail.
   NOTE - Fields in this policy should NOT be changed at all.
 */
RULE 'OpenRead'
EVENT 'OPEN_READ'
ACTION(System('/opt/ibm/MCStore/bin/mcstore recall -c -i ' || varchar(INODE) || ' -g ' || varchar(GENERATION) || ' -s 0' || ' -f ' || varchar(FS_ID)) = 0)
WHERE(XATTR('dmapi.MCEA', 5, 1) == 'N')
RULE 'else' EVENT 'OPEN_READ' DIRECTORIES_PLUS

RULE 'OpenWrite'
EVENT 'OPEN_WRITE'
ACTION(System('/opt/ibm/MCStore/bin/mcstore recall -c -i ' || varchar(INODE) || ' -g ' || varchar(GENERATION) || ' -s 0' || ' -f ' || varchar(FS_ID)) = 0)
WHERE(XATTR('dmapi.MCEA', 5, 1) == 'N')
RULE 'else' EVENT 'OPEN_WRITE' DIRECTORIES_PLUS

RULE 'DeleteFile'
EVENT 'DESTROY'
ACTION(System('/opt/ibm/MCStore/bin/mcstore remove -d -i ' || varchar(INODE) || ' -g ' || varchar(GENERATION) || ' -s 0' || ' -f ' || varchar(FS_ID)) = 0)
WHERE(XATTR('dmapi.MCEA', 5, 1) == 'C')
RULE 'else' EVENT 'DESTROY' DIRECTORIES_PLUS
