#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

test1:
    test-title: Authenticate user using AWS Signature Version 2
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version: 2010-05-08
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><AuthenticateUserResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><AuthenticateUserResult><UserId>123</UserId><UserName>root</UserName><AccountId>12345</AccountId><AccountName>s3_test</AccountName><SignatureSHA256>GHDa6voSj9LfLhDNNCUrrkMSwgg=</SignatureSHA256></AuthenticateUserResult><ResponseMetadata><RequestId>0000</RequestId></ResponseMetadata></AuthenticateUserResponse>'

test2:
    test-title: Authenticate user using AWS Signature Version 2 fails if Content-MD5 is wrong
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version : 2010-05-08
        Content-MD5:
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test3:
    test-title: Authenticate user using AWS Signature Version 2 fails if Content-Type is wrong
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version : 2010-05-08
        Content-Type:
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test4:
    test-title: Authenticate user using AWS Signature Version 2 fails date is missing
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version : 2010-05-08
        Content-Type:
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>AccessDenied</Code><Message>AWS authentication requires a valid Date or x-amz-date header</Message></Error><RequestId>4ce00c4561dd4b3b8606442f0b63bfcc</RequestId></ErrorResponse>'

test5:
    test-title: Authenticate user using AWS Signature Version 2 fails if X-amz-* headrs are wrong
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version: 2010-05-08
        X-amz-meta-username: sushantmane
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test6:
    test-title: Authenticate user using AWS Signature Version 2 fails if X-amz-* headrs are wrong
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version: 2010-05-08
        X-amz-meta-username: sushantmane
        X-amz-meta-username: manesushant
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test7:
    test-title: Authenticate user using AWS Signature Version 2 fails if subresource is incorrect
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl&versionId!=1
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.seagate.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version: 2010-05-08
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test8:
    test-title: Authenticate user using AWS Signature Version 2 fails if hostname is wrong
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Authorization: AWS AKIAJPINPFRBTPAYOGNA:GHDa6voSj9LfLhDNNCUrrkMSwgg=
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        ClientQueryParams: acl
        Connection: close
        Date: Fri, 08 Jul 2016 11:20:49 GMT
        Host: seagatebucket-8975030473428172790.s3.amazonaws.com
        Method: GET
        Pragma: no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Version: 2010-05-08
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method. For more information, see REST Authentication andSOAP Authentication for details.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test9:
    test-title: Authenticate user using AWS Signature Version 2 fails if wrong uri
    req-params:
        Action: AuthenticateUser
        Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
        Cache-Control: no-cache
        ClientAbsoluteUri: /
        lientQueryParams: acl
        Connection: close
        Host: s3.amazonaws.com
        x-amz-head: no-such-metadata
        x-amz-data: no-such-metadata
        Method": GET
        Pragma": no-cache
        User-Agent: jclouds/1.9.1 java/1.8.0
        Content-MD5:
        Content-Type: application/x-www-form-urlencoded
        Version: 2010-05-08
    req-headers:
        Content-type: application/x-www-form-urlencoded
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><Error><Code>AccessDenied</Code><Message>Access Denied.</Message></Error><RequestId>0000</RequestId></ErrorResponse>'

test10:
    test-title: Authenticate user using AWS Signature Version 4
    req-params:
        Action: AuthenticateUser
        Authorization: AWS4-HMAC-SHA256 Credential=AKIAJPINPFRBTPAYOGNA/20161129/seagate/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-retry;content-type;host;user-agent;x-amz-content-sha256;x-amz-date, Signature=36fc0a941ed4f92e6cd20b97fe4a7dd18ab4960fdcf4ca8266d01f1f4a2003bf
        ClientAbsoluteUri: /nondnsbucket/
        Connection: close
        Content-Length: 151
        Content-Type: application/octet-stream
        Host: s3.seagate.com
        Method: PUT
        User-Agent: aws-sdk-java/1.11.37 Linux/3.10.0-229.el7.x86_64 Java_HotSpot(TM)_64-Bit_Server_VM/25.91-b14/1.8.0_91
        Version: 2010-05-08
        X-Amz-Date: 20161129T112116Z
        amz-sdk-invocation-id: 77ec4b4f-5633-a7f1-1faf-4b285ea64c2c
        amz-sdk-retry: 0/0/500
        x-amz-content-sha256: 6037f3afb1c1fd1cbeea92ee144fef50b852a56fa81a946eda91852610fc1a8a
    req-headers:
        Accept: text/plain
    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><AuthenticateUserResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><AuthenticateUserResult><UserId>123</UserId><UserName>root</UserName><AccountId>12345</AccountId><AccountName>s3_test</AccountName><SignatureSHA256>36fc0a941ed4f92e6cd20b97fe4a7dd18ab4960fdcf4ca8266d01f1f4a2003bf</SignatureSHA256></AuthenticateUserResult><ResponseMetadata><RequestId>0000</RequestId></ResponseMetadata></AuthenticateUserResponse>'

# TODO Implement chunked, chunked seed signature generation for v4
#test11:
#    test-title: Authenticate user using AWS Signature Version 4 for chunked request
#    req-params:
#        Action: AuthenticateUser
#        Authorization: AWS4-HMAC-SHA256 Credential=AKIAJPINPFRBTPAYOGNA/20161201/seagate/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-retry;content-length;content-md5;content-type;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-decoded-content-length, Signature=442bf538c8c30dc4d67c07668580926b49a58f37fde579fb310d9650b733d3ac
#        ClientAbsoluteUri: /seagatebucket/3kfilec
#        Connection: close
#        Content-Length: 3174
#        Content-MD5: TDvczfmhsiP8a89eAH8IdA==
#        Content-Type: application/octet-stream
#        Host: s3.seagate.com
#        Method: PUT
#        User-Agent: aws-sdk-java/1.11.37 Linux/3.10.0-229.el7.x86_64 Java_HotSpot(TM)_64-Bit_Server_VM/25.91-b14/1.8.0_91
#        Version: 2010-05-08
#        X-Amz-Date: 20161201T085708Z
#        amz-sdk-invocation-id: 7179b44c-ca11-9f50-9d96-92d9a08f0d88
#        amz-sdk-retry: 0/0/500
#        x-amz-content-sha256: STREAMING-AWS4-HMAC-SHA256-PAYLOAD
#        x-amz-decoded-content-length: 3000
#    req-headers:
#        Accept: text/plain
#    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><AuthenticateUserResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><AuthenticateUserResult><UserId>123</UserId><UserName>tester</UserName><AccountId>12345</AccountId><AccountName>s3_test</AccountName><SignatureSHA256>442bf538c8c30dc4d67c07668580926b49a58f37fde579fb310d9650b733d3ac</SignatureSHA256></AuthenticateUserResult><ResponseMetadata><RequestId>0000</RequestId></ResponseMetadata></AuthenticateUserResponse>'
#
#test12:
#    test-title: Authenticate user using AWS Signature Version 4 for chunked seed request
#    req-params:
#        Action: AuthenticateUser
#        Authorization: AWS4-HMAC-SHA256 Credential=AKIAJPINPFRBTPAYOGNA/20161201/seagate/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-retry;content-length;content-md5;content-type;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-decoded-content-length, Signature=442bf538c8c30dc4d67c07668580926b49a58f37fde579fb310d9650b733d3ac
#        ClientAbsoluteUri: /seagatebucket/3kfilec
#            ClientQueryParams=
#        Connection: close
#        Content-Length: 3174
#        Content-MD5: TDvczfmhsiP8a89eAH8IdA==
#        Content-Type: application/octet-stream
#        Host: s3.seagate.com
#        Method: PUT
#        User-Agent: aws-sdk-java/1.11.37 Linux/3.10.0-229.el7.x86_64 Java_HotSpot(TM)_64-Bit_Server_VM/25.91-b14/1.8.0_91
#        Version: 2010-05-08
#        X-Amz-Date: 20161201T085708Z
#        amz-sdk-invocation-id: 7179b44c-ca11-9f50-9d96-92d9a08f0d88
#        amz-sdk-retry: 0/0/500
#        current-signature-sha256: c9362d1db74be5f55e69c3eb4caf1e45132de57b6ae78f5019242c2462c1a264
#        previous-signature-sha256: 442bf538c8c30dc4d67c07668580926b49a58f37fde579fb310d9650b733d3ac
#        x-amz-content-sha256: 4e1cffcdf7f1faddb97aadc228878acb329bfdef2112b7f56902631aee2c39d5
#        x-amz-decoded-content-length: 3000
#    req-headers:
#        Accept: text/plain
#    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><AuthenticateUserResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><AuthenticateUserResult><UserId>123</UserId><UserName>tester</UserName><AccountId>12345</AccountId><AccountName>s3_test</AccountName><SignatureSHA256>c9362d1db74be5f55e69c3eb4caf1e45132de57b6ae78f5019242c2462c1a264</SignatureSHA256></AuthenticateUserResult><ResponseMetadata><RequestId>0000</RequestId></ResponseMetadata></AuthenticateUserResponse>'
#
#test13:
#    test-title: Authenticate user using AWS Signature Version 4 (with client query params)
#    req-params:
#        Action: AuthenticateUser
#        Authorization: AWS4-HMAC-SHA256 Credential=AKIAJPINPFRBTPAYOGNA/20161201/seagate/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-retry;content-type;host;user-agent;x-amz-content-sha256;x-amz-date, Signature=d41dd2347a03bb161176580372beb38de4c4dfd2f68590cf0104a4e1cb051e04
#        ClientAbsoluteUri: /seagatebucket/3kfile
#        ClientQueryParams: acl
#        Connection: close
#        Content-Type: application/octet-stream
#        Host: s3.seagate.com
#        Method: GET
#        User-Agent: aws-sdk-java/1.11.37 Linux/3.10.0-229.el7.x86_64 Java_HotSpot(TM)_64-Bit_Server_VM/25.91-b14/1.8.0_91
#        Version: 2010-05-08
#        X-Amz-Date: 20161201T085714Z
#        amz-sdk-invocation-id: f98c4b44-a66f-ed6e-9800-9031942a5a74
#        amz-sdk-retry: 0/0/500
#        x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
#    req-headers:
#        Content-type: application/x-www-form-urlencoded
#        Accept: text/plain
#    output: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><AuthenticateUserResponse xmlns="https://iam.seagate.com/doc/2010-05-08/"><AuthenticateUserResult><UserId>123</UserId><UserName>tester</UserName><AccountId>12345</AccountId><AccountName>s3_test</AccountName><SignatureSHA256>d41dd2347a03bb161176580372beb38de4c4dfd2f68590cf0104a4e1cb051e04</SignatureSHA256></AuthenticateUserResult><ResponseMetadata><RequestId>0000</RequestId></ResponseMetadata></AuthenticateUserResponse>'

