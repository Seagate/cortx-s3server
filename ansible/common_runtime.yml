#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

---

# Prerequisites: Necessary yum repos setup, possibly jenkins_yum_repos.yml

# All S3 dependencies are listed in s3 rpm spec and will be installed
# when s3 rpm is installed.

- name: Update to latest selinux-policy (required by latest openldap)
  yum: pkg={{item}} state=latest
  with_items:
    - selinux-policy

# Required only in dev testing.
- name: Install redis
  yum:
    name: redis
    state: installed

# Keep commented for future reference
# - name: Install nginx
#   yum:
#     name: nginx
#     state: present
#
# - name: Setup nginx config
#   copy:
#     src: ./files/nginx/nginx.conf.seagate
#     dest: /etc/nginx/nginx.conf

- name: Install haproxy
  yum:
    name: haproxy
    state: present

- name: Setup haproxy config
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and (ansible_distribution_major_version == '7')
  copy:
    src: ./files/haproxy/haproxy_osver7.cfg
    dest: /etc/haproxy/haproxy.cfg

- name: Setup haproxy config for RHEL/CentOS 8
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and (ansible_distribution_major_version == '8')
  copy:
    src: ./files/haproxy/haproxy_osver8.cfg
    dest: /etc/haproxy/haproxy.cfg

- name: Setup haproxy 503 error code to http file
  copy:
    src: ./files/haproxy/503.http
    dest: /etc/haproxy/errors/

- name: Setup logrotate config for haproxy
  copy:
    src: ./files/haproxy/logrotate/haproxy
    dest: /etc/logrotate.d/haproxy

- name: Setup rsyslog additional configs
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: './files/haproxy/rsyslog.d/haproxy.conf', dest: '/etc/rsyslog.d/haproxy.conf'}
    - { src: './files/rsyslog-tcp-audit.conf', dest: '/etc/rsyslog.d/rsyslog-tcp-audit.conf'}
    - { src: './files/ldap/rsyslog.d/slapdlog.conf', dest: '/etc/rsyslog.d/slapdlog.conf'}
  notify: restart rsyslog

- name: Clean existing logrotate configuration
  file:
    state: absent
    path: /etc/cron.daily/logrotate

- name: Setup logrotate config for haproxy to run hourly
  copy:
    src: ./files/haproxy/logrotate/logrotate
    dest: /etc/cron.hourly/logrotate
    mode: preserve

- name: Enable http port in selinux
  command: setsebool httpd_can_network_connect on -P
  when: ansible_selinux.status == "enabled"

- name: Install keepalived
  yum:
    name: keepalived
    state: present

- name: Setup keepalived main config (sample, manually updated)
  copy:
    src: ./files/keepalived/keepalived.conf.main
    dest: /etc/keepalived/keepalived.conf.main

- name: Create working directory for S3 server.
  file: path=/var/seagate/s3 state=directory

- name: Update s3 logrotate entry in cron to run hourly
  copy:
    src: ./files/s3-logrotate/s3logfilerollover.sh
    dest: /etc/cron.hourly/s3logfilerollover.sh
    mode: 0755

- name: Update m0trace logrotate entry in cron to run hourly
  copy:
    src: ./files/s3-logrotate/s3m0tracelogfilerollover.sh
    dest: /etc/cron.hourly/s3m0tracelogfilerollover.sh
    mode: 0755

- name: Update addb logrotate entry in cron to run hourly
  copy:
    src: ./files/s3-logrotate/s3addblogfilerollover.sh
    dest: /etc/cron.hourly/s3addblogfilerollover.sh
    mode: 0755

- name: Update s3 support bundle logrotate entry in cron to run hourly
  copy:
    src: ./files/s3-logrotate/s3supportbundlefilerollover.sh
    dest: /etc/cron.hourly/s3supportbundlefilerollover.sh
    mode: 0755
