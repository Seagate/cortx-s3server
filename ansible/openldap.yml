#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

---
- name: Openldap setup for S3 Auth server (not idempotent, only use for fresh setup)
  hosts: s3ldapnode
  remote_user: root
  gather_facts: yes
  vars:
    ldap_url: ldap:\/\/\/ ldaps:\/\/\/ ldapi:\/\/\/
  vars_prompt:
    - name: "openldappasswd"
      prompt: "Enter new password for openldap rootDN:"
      private: yes

    - name: "ldapiamadminpasswd"
      prompt: "Enter new password for openldap IAM admin:"
      private: yes

  tasks:

      - name: Upgrade selinux-policy to latest (required by openldap)
        yum: pkg=selinux-policy state=latest

      - name: Install Openldap packages
        when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and (ansible_distribution_major_version == '7')
        yum: pkg={{item}} state=installed
        with_items:
          - openldap-servers
          - openldap-clients

      - name: Install Openldap packages
        when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and (ansible_distribution_major_version == '8')
        yum: pkg={{item}} state=installed
        with_items:
          - openldap-servers-2.4.46-9.el8
          - openldap-clients-2.4.46-9.el8

      - name: Copy mdb ldiff file, if not present
        copy:
          src: files/ldap/olcDatabase={2}mdb.ldif
          dest: /etc/openldap/slapd.d/cn=config/
          force: no
          owner: ldap
          group: ldap

      # - name: Install ntp
      #   yum: pkg=ntp state=installed
      #
      # - name: Configure ntp (required for ldap replication)
      #   command: ntpdate time.seagate.com
      #   notify:
      #     - restart ntpd

      - name: Enable slapd service
        command: systemctl enable slapd

      - name: Ensures temp /tmp/s3ldap dir exists
        file: path=/tmp/s3ldap state=directory

      - name: Generate slappasswd for rootDN
        shell: slappasswd -s {{ openldappasswd }}
        register: slapdpasswdhash
        no_log: true

      - name: Copy Initial ldap config using "slapdpasswdhash" above
        template:
          src: files/ldap/cfg_ldap.ldif
          dest: /tmp/s3ldap/cfg_ldap.ldif

      - name: Generate slappasswd for IAM admin
        shell: slappasswd -s {{ ldapiamadminpasswd }}
        register: ldapadminpasswdhash
        no_log: true

      - name: Copy ldap config using "ldapadminpasswdhash" above
        template:
          src: files/ldap/iam-admin.ldif
          dest: /tmp/s3ldap/iam-admin.ldif

      - name: Copy ldap log config file
        template:
          src: files/ldap/slapdlog.ldif
          dest: /tmp/s3ldap/slapdlog.ldif

      - name: Copy s3 ldap index file
        template:
          src: files/ldap/s3slapdindex.ldif
          dest: /tmp/s3ldap/s3slapdindex.ldif

      - name: Copy ldap schema, data, replication-config files
        copy: src={{ item.src }} dest={{ item.dest }}
        with_items:
          - { src: 'ldap/cn={1}s3user.ldif', dest: '/tmp/s3ldap/cn={1}s3user.ldif' }
          - { src: 'ldap/ldap-init.ldif', dest: '/tmp/s3ldap/ldap-init.ldif' }
          - { src: 'ldap/iam-admin-access.ldif', dest: '/tmp/s3ldap/iam-admin-access.ldif' }
          - { src: 'ldap/iam-constraints.ldif', dest: '/tmp/s3ldap/iam-constraints.ldif' }
          - { src: 'ldap/syncprov_mod.ldif', dest: '/tmp/s3ldap/syncprov_mod.ldif' }
          - { src: 'ldap/syncprov.ldif', dest: '/tmp/s3ldap/syncprov.ldif' }
          - { src: 'ldap/ppolicymodule.ldif', dest: '/tmp/s3ldap/ppolicymodule.ldif' }
          - { src: 'ldap/ppolicyoverlay.ldif', dest: '/tmp/s3ldap/ppolicyoverlay.ldif' }
          - { src: 'ldap/ppolicy-default.ldif', dest: '/tmp/s3ldap/ppolicy-default.ldif' }

      - name: Clean up old ldap files
        file:
          state: absent
          path: /etc/openldap/slapd.d/cn=config/cn=schema/cn={1}s3user.ldif

      - name: Start slapd
        service:
          name: slapd
          state: restarted
          enabled: yes

      - name: Remove old ldap files
        file:
          name: /etc/openldap/slapd.d/cn\=config/cn\=schema/cn\=\{1\}s3user.ldif
          state: absent

      - name: Configure OpenLDAP - Base config
        command: ldapmodify -Y EXTERNAL -H ldapi:/// -w {{ openldappasswd }} -f /tmp/s3ldap/cfg_ldap.ldif
        no_log: true

      - name: Remove Base ldap config file
        file:
          name: /tmp/s3ldap/cfg_ldap.ldif
          state: absent

      - name: restart slapd
        service:
          name: slapd
          state: restarted

      - name: Configure OpenLDAP - Schema
        command: ldapadd -x -D "cn=admin,cn=config" -w {{ openldappasswd }} -f /tmp/s3ldap/cn={1}s3user.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Base data
        command: ldapadd -x -D "cn=admin,dc=seagate,dc=com" -w {{ openldappasswd }} -f /tmp/s3ldap/ldap-init.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Add IAM admin
        command: ldapadd -x -D "cn=admin,dc=seagate,dc=com" -w {{ openldappasswd }} -f /tmp/s3ldap/iam-admin.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Setup permissions for IAM admin
        command: ldapmodify -Y EXTERNAL -H ldapi:/// -w {{ openldappasswd }} -f /tmp/s3ldap/iam-admin-access.ldif
        no_log: true

      - name: Configure OpenLDAP - Enable IAM constraints
        command: ldapadd -Y EXTERNAL -H ldapi:/// -w {{ openldappasswd }} -f /tmp/s3ldap/iam-constraints.ldif
        no_log: true

      - name: Configure OpenLDAP - Load ppolicy schema
        command: ldapmodify -D "cn=admin,cn=config" -w {{ openldappasswd }} -a -f /etc/openldap/schema/ppolicy.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Load ppolicy module
        command: ldapmodify -D "cn=admin,cn=config" -w {{ openldappasswd }} -a -f /tmp/s3ldap/ppolicymodule.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Load ppolicy overlay
        command: ldapmodify -D "cn=admin,cn=config" -w {{ openldappasswd }} -a -f /tmp/s3ldap/ppolicyoverlay.ldif -H ldapi:///
        no_log: true

      - name: Configure OpenLDAP - Configure password policy
        command: ldapmodify -x -a -H ldapi:/// -D cn=admin,dc=seagate,dc=com -w {{ openldappasswd }} -f /tmp/s3ldap/ppolicy-default.ldif
        no_log: true

      - name: Configure OpenLDAP - Enable openldap log
        command: ldapmodify -Y EXTERNAL -H ldapi:/// -w {{ openldappasswd }} -f /tmp/s3ldap/slapdlog.ldif
        no_log: true

      - name: Configure OpenLDAP - Enable openldap indexing
        command: ldapmodify -Y EXTERNAL -H ldapi:/// -w {{ openldappasswd }} -f /tmp/s3ldap/s3slapdindex.ldif
        no_log: true

      - name: Backup original slapd file
        when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat') and (ansible_distribution_major_version == '7')
        copy:
          src:  /etc/sysconfig/slapd
          dest: /etc/sysconfig/slapd.bak
          backup: yes
          remote_src: yes

      - name: Delete temp directory
        file:
          name: /tmp/s3ldap
          state: absent

      - name: restart slapd
        service:
          name: slapd
          state: restarted
          enabled: yes

      - name: Create ldap credential file
        copy:
          content: |
            ldap_root_pwd={{ openldappasswd }}
            ldap_admin_pwd={{ ldapiamadminpasswd }}
          dest: /root/.s3_ldap_cred_cache.conf
        tags: store_ldap_pwd

  # handlers:
  #     - name: restart ntpd
  #       service:
  #         name: ntpd
  #         state: restarted
