#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

# Controller = Class Name.
# Action = Method name.
# Service = AWS iam/sts/s3 APIs.
# module = Name of the file containing the controller.

assumerolewithsaml:
  controller : AssumeRoleWithSAML
  action :  create
  service : sts
  module : assume_role_with_saml
createaccount:
  controller : Account
  action : create
  service : iam
listaccounts:
  controller : Account
  action :  list
  service : iam
resetaccountaccesskey:
  controller : Account
  action :  reset_access_key
  service : iam
deleteaccount:
  controller : Account
  action :  delete
  service : iam
createaccesskey:
  controller : AccessKey
  action :  create
  service : iam
  module : access_key
creategroup:
  controller : Group
  action :  create
  service : iam
createpolicy:
  controller : Policy
  action :  create
  service : iam
createrole:
  controller : Role
  action :  create
  service : iam
createsamlprovider:
  controller : SAMLProvider
  action : create
  service : iam
  module : saml_provider
createuser:
  controller : User
  action : create
  service : iam
createuserloginprofile:
  controller : UserLoginProfile
  action : create
  service : iam
createaccountloginprofile:
  controller : AccountLoginProfile
  action : create
  service : iam
getaccountloginprofile:
  controller : AccountLoginProfile
  action : list
  service : iam
updateaccountloginprofile:
  controller : AccountLoginProfile
  action : update
  service : iam
deleteaccesskey:
  controller : AccessKey
  action : delete
  service : iam
  module : access_key
deleterole:
  controller : Role
  action : delete
  service : iam
deletesamlprovider:
  controller : SAMLProvider
  action : delete
  service : iam
  module : saml_provider
deleteuser:
  controller : User
  action : delete
  service : iam
getfederationtoken:
  controller : FederationToken
  action : create
  service : sts
  module: federation_token
listaccesskeys:
  controller : AccessKey
  action : list
  service : iam
  module : access_key
listroles:
  controller : Role
  action : list
  service : iam
listsamlproviders:
  controller : SAMLProvider
  action : list
  service : iam
  module : saml_provider
listusers:
  controller : User
  action : list
  service : iam
updateaccesskey:
  controller : AccessKey
  action : update
  service : iam
  module : access_key
updatesamlprovider:
  controller : SAMLProvider
  action : update
  service : iam
  module : saml_provider
updateuser:
  controller :  User
  action : update
  service : iam
getuserloginprofile:
  controller : UserLoginProfile
  action : get
  service : iam
updateuserloginprofile:
  controller : UserLoginProfile
  action : update
  service : iam
changepassword:
  controller : UserLoginProfile
  action : changepassword
  service : iam
gettempauthcredentials:
  controller : TempAuthCredentials
  action : create
  service : iam
