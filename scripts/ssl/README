#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

### Generate SSL certificate
 * Seagate
 For Seagate domain run
 `./setup-ssl.sh --seagate`


 * AWS
 `./setup-ssl.sh --aws`


 * For Custom domain:
 Create a file with list of domain names (including wildcard domains). The first domain name in this file will be used as common name(CN) in certificates.
 ```
 $ cat dns.list
 s3.example.com
 *.s3.example.com
 s3-us.example.com
 *.s3-us.example.com
 ```
 Run following command to generate ssl certificate and key:
 ` ./setup-ssl.sh --san-file dns.list`

---


### Nginx/haproxy SSL Configuration steps

* Generate certificates using
  ```
  cd scripts/ssl/
  ./setup-ssl.sh --seagate
  ```

* Verify the certificate with
  `openssl x509 -text -in ssl_sandbox/s3server.crt`
  Output should have DNS:s3.seagate.com, DNS:*.s3.seagate.com under X509v3 Subject Alternative Name

* Copy the following certificates and key files:
  For nginx
  `cp ssl_sandbox/* /etc/ssl/stx-s3/s3/`

  Update following entries in /etc/nginx/nginx.conf
  ```
  server {
      listen                80;
      listen                443 reuseport ssl;
      server_name           s3.seagate.com;
      ssl_certificate       /etc/ssl/stx-s3/s3/s3server.crt;
      ssl_certificate_key   /etc/ssl/stx-s3/s3/s3server.key;
    ...
  }
  ```

  For haproxy
  `mkdir -p /etc/ssl/stx-s3/s3/`
  `cp ssl_sandbox/* /etc/ssl/stx-s3/s3/`
  `cat /etc/ssl/stx-s3/s3/s3server.crt /etc/ssl/stx-s3/s3/s3server.key > /etc/ssl/stx-s3/s3/s3server.pem`

  Update following entries in /etc/haproxy/haproxy.cfg
  ```
  frontend main
    # Disable HTTP port
    #bind 0.0.0.0:80

    # Enable SSL port
    bind 0.0.0.0:443 ssl crt /etc/ssl/stx-s3/s3/s3server.pem

  ```


* Restart Nginx:
  `systemctl restart nginx`

* Verify the nginx ssl setup using command:
  `openssl s_client -connect s3.seagate.com:443 -showcerts | openssl x509 -noout -text`
  Output should have DNS:s3.seagate.com, DNS:*.s3.seagate.com under X509v3 Subject Alternative Name


### To use ssl with s3cmd:
Update following attributes in the .s3cfg files, ex: pathstyle.s3cfg
```
use_https = True
ca_certs_file = /etc/ssl/stx-s3/s3/ca.crt     # for nginx
#ca_certs_file = /etc/ssl/stx-s3/s3/ca.crt    # for haproxy
check_ssl_certificate = True
check_ssl_hostname = True
```

### To use ssl with jclient/jcloud tests:

Run
```
/opt/jdk1.8.0_91/bin/keytool -import -trustcacerts
      -keystore /opt/jdk1.8.0_91/jre/lib/security/cacerts \
      -storepass changeit -noprompt -alias s3server
      -file /etc/ssl/stx-s3/s3/ca.crt
```

Note:
- Update the endpoints in auth-utils/jcloudclient/src/main/resources/endpoints.properties
  and auth-utils/jclient/src/main/resources/endpoints.properties to use https url
  Rebuild jclient and jcloud clients and copy to st/clitests.


Note:
Currently only tests for bucket name with '.' are not supported due to s3cmd limitations.
Comment out tests using seagate.bucket in s3cmd_specs.py

## Generating SSL certificates for OpenLdap and deploying it

* Create a file with domain name of Openldap server
  Ex:$cat dns.list
     localhost
* For creating a file with domain names of Multiple Openldap server(Optional
  for single node setup)
  Ex:$cat dns.list
    openldap_node_1
    openldap_node_2
    ...
    openldap_node_n

* Run following command to generate ssl certificate and key:
   cd scripts/ssl/
  `./setup-ssl.sh --san-file dns.list`

* Default value for `cert_name` & `cert_key` is `openldap`
  & changes if explicitly specified using `--cert-name` option

* Copy the following certificates and key files:
  `cp ssl_sandbox/ca.crt /etc/ssl/stx-s3/openldap/`
  `cp ssl_sandbox/*.crt /etc/ssl/stx-s3/openldap/`
  `cp ssl_sandbox/*.key /etc/ssl/stx-s3/openldap/`

* Set Owner of directory and files
  chown -R root:root /etc/ssl/stx-s3/openldap/*

* Add location of certificate and key's in ldif file
  #cat ssl_certs.ldif
  dn: cn=config
  replace: olcTLSCACertificateFile
  olcTLSCACertificateFile: /etc/ssl/stx-s3/openldap/ca.crt
  -
  replace: olctlscertificatefile
  olctlscertificatefile: /etc/ssl/stx-s3/openldap/cert_name.crt
  -
  replace: olctlscertificatekeyfile
  olctlscertificatekeyfile: /etc/ssl/stx-s3/openldap/cert_key.key

* Update LDAP
  ldapmodify -Y EXTERNAL  -H ldapi:/// -f ssl_certs.ldif

* Enable SSL port add ldaps:/// entry in /etc/sysconfig/slapd
  SLAPD_URLS="ldap:/// ldaps:/// ldapi:///"

* [Optional] Update openldap client config file to use ssl for openldap cli
  Add below entries in /etc/openldap/ldap.conf

  SSL on
  TLS_CACERTDIR     /etc/ssl/stx-s3/openldap/
  TLS_CACERT        /etc/ssl/stx-s3/openldap/ca.crt
  TLS_REQCERT allow

* Restart LDAP services
  systemctl restart slapd

* Add certificate to Auth Server Java Key Store file
  keytool -import -trustcacerts -keystore s3authserver.jks -storepass seagate \
          -noprompt -alias ldapcert \
          -file /etc/ssl/stx-s3/openldap/s3openldap.crt
