#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

# haproxy --v command will show current/build settings

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2 info    #Log configuration
    # create a rsyslog.d/haproxy.conf with rules to create
    # /var/log/haproxy.log file.

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy             #Haproxy running under user and group "haproxy"
    group       haproxy

    # nbproc value need to be set to 8 in physical systems.
    #nbproc      2

    # TODO Set appropriate value to it, after testing
    # https://www.haproxy.com/blog/multithreading-in-haproxy/
    nbthread 8
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    #SSL options
    tune.ssl.default-dh-param 2048

    # Below option introduced in 1.8 version of haproxy
    # TODO verify its ok on RHEL/CentOS 8
    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    option                  redispatch
    log                     global
    option                  httplog
    option                  log-separate-errors
    option                  dontlognull
    option                  http-tunnel
    option                  forwardfor
    errorfile               503 /etc/haproxy/errors/503.http

    retries                 3

    timeout http-request    10s
    timeout queue           1m

    # Connect timeout to server
    timeout connect         5s

    # Inactivity timeout w.r.t S3 client
    timeout client          30s

    # Inactivity timeout w.r.t backend S3 servers
    timeout server          30s

    timeout http-keep-alive 10s
    timeout tunnel          60s
    timeout client-fin      20s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
listen haproxy3-monitoring
    bind *:8080                #Haproxy Monitoring run on port 8080
    mode http
    option forwardfor
    option httpclose
    stats enable
    stats show-legends
    stats refresh 5s
    stats uri /stats                             #URL for HAProxy monitoring
    stats realm Haproxy\ Statistics
    #stats auth howtoforge:howtoforge            #User and Password for login to the monitoring dashboard
    #stats admin if TRUE
    #default_backend app-main                    #This is optionally for monitoring backend

#---------------------------------------------------------------------
# FrontEnd Configuration
#---------------------------------------------------------------------
frontend main
    # ssl-passthrough reference:
    # https://serversforhackers.com/c/using-ssl-certificates-with-haproxy

    # s3 server port
    bind 0.0.0.0:80
    bind 0.0.0.0:443 ssl crt /etc/ssl/stx-s3/s3/s3server.pem
    option forwardfor
    default_backend app-main

    # s3 auth server port
    bind 0.0.0.0:9080
    bind 0.0.0.0:9443 ssl crt /etc/ssl/stx-s3/s3/s3server.pem

    acl s3authbackendacl dst_port 9443
    acl s3authbackendacl dst_port 9080
    use_backend s3-auth if s3authbackendacl

#---------------------------------------------------------------------
# BackEnd roundrobin as balance algorithm
#---------------------------------------------------------------------
backend app-main
    balance static-rr                                     #Balance algorithm
    http-response set-header Server SeagateS3
    # Check the S3 server application is up and healthy - 200 status code
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost

    # option log-health-checks
    default-server inter 2s fastinter 100 rise 1 fall 5 on-error fastinter

    # For ssl communication between haproxy and s3server
    # Replace below line
    server s3-instance-1 0.0.0.0:28081 check maxconn 110       # s3 instance 1
    # with
    # server s3-instance-1 0.0.0.0:28081 check maxconn 110 ssl verify required ca-file /etc/ssl/stx-s3/s3/ca.crt

    # server s3-instance-2 0.0.0.0:28082 check maxconn 110     # s3 instance 2

#----------------------------------------------------------------------
# BackEnd roundrobin as balance algorith for s3 auth server
#----------------------------------------------------------------------
backend s3-auth
    balance static-rr                                     #Balance algorithm

    # Check the S3 Auth server application is up and healthy - 200 status code
    option httpchk HEAD /auth/health HTTP/1.1\r\nHost:\ localhost

    # option log-health-checks
    default-server inter 2s fastinter 100 rise 1 fall 5 on-error fastinter

    server s3authserver-instance1 0.0.0.0:9085 #check ssl verify required ca-file /etc/ssl/stx-s3/s3auth/s3authserver.crt   # s3 auth server instance 1
    # server s3authserver-2 s3auth-node2:9086 check ssl verify required ca-file /etc/ssl/stx-s3/s3auth/s3authserver.crt   # s3 auth server instance 2
    # server s3authserver-3 s3auth-node3:9086 check ssl verify required ca-file /etc/ssl/stx-s3/s3auth/s3authserver.crt   # s3 auth server instance 3
    # server s3authserver-4 s3auth-node4:9086 check ssl verify required ca-file /etc/ssl/stx-s3/s3auth/s3authserver.crt   # s3 auth server instance 4

    #server s3authserver 0.0.0.0:9085 check             # s3 auth server No SSL
