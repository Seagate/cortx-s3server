global
    log         127.0.0.1 local2
    log stdout format raw local0
    h1-case-adjust authorization Authorization
    h1-case-adjust accept-encoding Accept-Encoding
    h1-case-adjust action Action
    h1-case-adjust credential Credential
    h1-case-adjust signedHeaders SignedHeaders
    h1-case-adjust signature Signature
    h1-case-adjust clientAbsoluteUri ClientAbsoluteUri
    h1-case-adjust clientQueryParams ClientQueryParams
    h1-case-adjust connection Connection
    h1-case-adjust host Host
    h1-case-adjust method Method
    h1-case-adjust request_id Request_id
    h1-case-adjust requestorAccountId RequestorAccountId
    h1-case-adjust requestorAccountName RequestorAccountName
    h1-case-adjust requestorCanonicalId RequestorCanonicalId
    h1-case-adjust requestorEmail RequestorEmail
    h1-case-adjust requestorUserId RequestorUserId
    h1-case-adjust requestorUserName RequestorUserName
    h1-case-adjust s3Action S3Action
    h1-case-adjust user-Agent User-Agent
    h1-case-adjust version Version
    h1-case-adjust x-Amz-Content-SHA256 X-Amz-Content-SHA256
    h1-case-adjust x-Amz-Date X-Amz-Date
    h1-case-adjust x-Forwarded-For X-Forwarded-For

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     13
    user        haproxy
    group       haproxy
    nbproc      2
    daemon

    # turn on stats unix socket and dynamic configuration reload
    stats socket /var/lib/haproxy/stats expose-fd listeners

    # utilize system-wide crypto-policies
    # ssl-default-bind-ciphers PROFILE=SYSTEM
    # ssl-default-server-ciphers PROFILE=SYSTEM

    #SSL options            # utilize system-wide crypto-policies
    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option h1-case-adjust-bogus-server
    option h1-case-adjust-bogus-client
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    errorfile               503 /etc/cortx/s3/haproxy/errors/503.http
    retries                 3
    timeout http-request    10s
    timeout queue           10s
    timeout connect         5s
    timeout client          360s
    timeout server          360s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
#----------------------------------------------------------------------
# FrontEnd S3 Configuration
#----------------------------------------------------------------------
frontend s3-main
    # s3 server port
    bind 0.0.0.0:80
    bind 0.0.0.0:443 ssl crt /etc/cortx/s3/stx/stx.pem

    option forwardfor
    default_backend s3-main

    # s3 auth server port
    bind 0.0.0.0:9080
    bind 0.0.0.0:9443 ssl crt /etc/cortx/s3/stx/stx.pem

    acl s3authbackendacl dst_port 9443
    acl s3authbackendacl dst_port 9080
    use_backend s3-auth if s3authbackendacl

#----------------------------------------------------------------------
# BackEnd roundrobin as balance algorithm
#----------------------------------------------------------------------
backend s3-main
    balance static-rr                                     #Balance algorithm
    http-response set-header Server SeagateS3
    # Check the S3 server application is up and healthy - 200 status code
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost

    # option log-health-checks
    default-server inter 2s fastinter 100 rise 1 fall 5 on-error fastinter

    # For ssl communication between haproxy and s3server
    # Replace below line
    server s3-instance-1 0.0.0.0:28071 check maxconn 110        # s3 instance 1

#----------------------------------------------------------------------
# BackEnd roundrobin as balance algorith for s3 auth server
#----------------------------------------------------------------------
backend s3-auth
    balance static-rr                                     #Balance algorithm

    # Check the S3 Auth server application is up and healthy - 200 status code
    option httpchk HEAD /auth/health HTTP/1.1\r\nHost:\ localhost

    # option log-health-checks
    default-server inter 2s fastinter 100 rise 1 fall 5 on-error fastinter

    server s3authserver-instance1 0.0.0.0:28050 #check ssl verify required ca-file /etc/ssl/stx-s3/s3auth/s3authserver.crt   # s3 auth server instance 1

#-------S3 Haproxy configuration end-----------------------------------
