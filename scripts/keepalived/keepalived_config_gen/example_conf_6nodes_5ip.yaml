#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

# Total number of nodes in cluster
total_nodes: 6

# IPs per each node
ips_p_node: 5

# auth_pass param for keepalived config
auth_pass: ap123456

# Keepalived virtual_router_id param value to start with
# vrrp_instances::virtual_router_id is equal base_rid + vrrp idx
base_rid: 77

# List of nodes in form of <host> <iface to config>
# Must contain total_nodes items
node_list:
  - hw0 eth0
  - hw1 eth1
  - hw2 eth2
  - hw3 eth0
  - hw4 eth1
  - hw5 eth2

# List of virtual IP addresses to configure in form of <ip>/<net mask>
# Must contain total_nodes * ips_p_node items
vip_list:
  - 192.168.1.0/20
  - 192.168.1.1/20
  - 192.168.1.2/20
  - 192.168.1.3/20
  - 192.168.1.4/20
  - 192.168.1.5/20
  - 192.168.1.6/20
  - 192.168.1.7/20
  - 192.168.1.8/20
  - 192.168.1.9/20
  - 192.168.1.10/20
  - 192.168.1.11/20
  - 192.168.1.12/20
  - 192.168.1.13/20
  - 192.168.1.14/20
  - 192.168.1.15/20
  - 192.168.1.16/20
  - 192.168.1.17/20
  - 192.168.1.18/20
  - 192.168.1.19/20
  - 192.168.1.20/20
  - 192.168.1.21/20
  - 192.168.1.22/20
  - 192.168.1.23/20
  - 192.168.1.24/20
  - 192.168.1.25/20
  - 192.168.1.26/20
  - 192.168.1.27/20
  - 192.168.1.28/20
  - 192.168.1.29/20

# Describes mapping of virtula IPs to hosts
# Each line describes a single virtual IP from the vip_list
# Nodes are referenced as zero based index from node_list
# format: <main node> <backup 1> <backup 2> ... <backup n>
# number of backups should be equal to total_nodes - 1
ip2host:
  - 0 1 2 3 4 5
  - 0 2 3 4 5 1
  - 0 3 4 5 1 2
  - 0 4 5 1 2 3
  - 0 5 1 2 3 4
  - 1 0 2 3 4 5
  - 1 2 3 4 5 0
  - 1 3 4 5 0 2
  - 1 4 5 0 2 3
  - 1 5 0 2 3 4
  - 2 0 1 3 4 5
  - 2 1 3 4 5 0
  - 2 3 4 5 0 1
  - 2 4 5 0 1 3
  - 2 5 0 1 3 4
  - 3 0 1 2 4 5
  - 3 1 2 4 5 0
  - 3 2 4 5 0 1
  - 3 4 5 0 1 2
  - 3 5 0 1 2 4
  - 4 0 1 2 3 5
  - 4 1 2 3 5 0
  - 4 2 3 5 0 1
  - 4 3 5 0 1 2
  - 4 5 0 1 2 3
  - 5 0 1 2 3 4
  - 5 1 2 3 4 0
  - 5 2 3 4 0 1
  - 5 3 4 0 1 2
  - 5 4 0 1 2 3
